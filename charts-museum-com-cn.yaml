apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-repo-nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name charts.kubesphere.com.cn;
        
        location / {
            root /website/helm-charts;
            autoindex on;
            autoindex_format html;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: chartmuseum
  name: ks-chartmuseum-com-cn
  namespace: kubesphere
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chartmuseum
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: chartmuseum
    spec:
      affinity: {}
      containers:
      - command:
        - git-sync
        args:
        - --repo=https://github.com/kubesphere/helm-charts
        - --root=/website
        - --ref=gh-pages
        - --depth=1
        - --sync-timeout=600s
        - --exechook-timeout=120s
        - --max-failures=3
        image: swr.cn-southwest-2.myhuaweicloud.com/ks/kubespheredev/git-sync-hugo:v4.0.0-0.127.0
        imagePullPolicy: IfNotPresent
        name: git-sync
        volumeMounts:
        - mountPath: /website
          name: chartmuseum
      # - name: chartmuseum
      #   image: ghcr.io/helm/chartmuseum:v0.16.2
      #   env:
      #   - name: PORT
      #     value: "8080"
      #   - name: STORAGE
      #     value: "local"
      #   - name: STORAGE_LOCAL_ROOTDIR
      #     value: "/website/helm-charts"
      #   - name: DISABLE_API
      #     value: "false"
      #   ports:
      #   - containerPort: 8080
      #   volumeMounts:
      #   - name: chartmuseum
      #     mountPath: /website
      - name: nginx
        image: swr.cn-southwest-2.myhuaweicloud.com/ks/library/nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: chartmuseum
          mountPath: /website/helm-charts
      volumes:
      - name: config
        configMap:
          name: helm-repo-nginx-config
      - name: chartmuseum
        persistentVolumeClaim:
          claimName: ks-chartmuseum-0

# 3. PVC
# 将网站站代码进行持久化，避免新启动时拉取代码时间过长
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: chartmuseum
  name: ks-chartmuseum-0
  namespace: kubesphere
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi


# 4. Service
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubesphere.io/creator: admin
  labels:
    app: chartmuseum
  name: ks-chartmuseum-com-cn
  namespace: kubesphere
spec:
  ports:
  - name: http-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: chartmuseum
  sessionAffinity: None
  type: ClusterIP

# 6. kubesphere.io 域名证书管理
# 证书管理使用cert-manager

# ---
# apiVersion: cert-manager.io/v1
# kind: Issuer
# metadata:
#   namespace: kubesphere-website-system
#   name: letsencrypt-prod
# spec:
#   acme:
#     email: kubesphere@kubesphere.io
#     privateKeySecretRef:
#       name: letsencrypt-prod
#     server: https://acme-v02.api.letsencrypt.org/directory
#     solvers:
#     - http01:
#         ingress:
#           class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    app: kubesphere
    component: demo
  name: charts-kubesphere-com-cn
  namespace: kubesphere
spec:
  dnsNames:
  - charts.kubesphere.com.cn
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: letsencrypt-prod
  secretName: charts-kubesphere-com-cn
---
# 7. Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    kubesphere.io/creator: admin
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Content-Security-Policy: frame-ancestors 'self'";
      more_set_headers "X-Frame-Options: SAMEORIGIN";
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: charts-kubesphere-com-cn
  namespace: kubesphere
spec:
  rules:
  - host: charts.kubesphere.com.cn
    http:
      paths:
      - backend:
          service:
            name: ks-chartmuseum-com-cn
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - charts.kubesphere.com.cn
    secretName: charts-kubesphere-com-cn   # 此处secretName 应该与cert-manager的Certificate中secretName名称一致
